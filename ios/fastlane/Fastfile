cocoapods repo_update: true

import_from_git(
    url: 'git@github.com:CruGlobal/cru-fastlane-files.git',
    branch: 'ios-api-key',
    path: 'Fastfile'
)

platform :ios do
  override_lane :cru_build_app do |options|
    profile_name = options[:profile_name] || ENV['CRU_APPSTORE_PROFILE_NAME']
    type = options[:type] || 'appstore'
    export_method = options[:export_method] || 'app-store'
    configuration = options[:configuration] || 'Release'

    cru_download_localizations if ENV['CRU_SKIP_LOCALIZATION_DOWNLOAD'].nil?

    automatic_code_signing(
      use_automatic_signing: false,
      profile_name: profile_name
    )

    unless options.key?(:skip_create_keychain) && options[:skip_create_keychain]
      # Travis requires a keychain to be created to store the certificates in, however
      # using this utility to create a keychain locally will really mess up local keychains
      # and is not required for a successful build.
      # It also cannot be called more than once
      # (in the case that cru_build_app happens more than once in the same execution)
      create_keychain(
        name: ENV['MATCH_KEYCHAIN_NAME'],
        password: ENV['MATCH_PASSWORD'],
        default_keychain: true,
        unlock: true,
        timeout: 3600,
        add_to_search_list: true
      )
    end
    unless ENV['CRU_CALLDIRECTORY_TARGET'].nil?
      call_directory_profile =
        if type == 'adhoc'
          ENV['CRU_CALLDIRECTORY_ADHOC_PROFILE_NAME']
        else
          ENV['CRU_CALLDIRECTORY_APPSTORE_PROFILE_NAME']
        end
      automatic_code_signing(
        use_automatic_signing: false,
        targets: ENV['CRU_CALLDIRECTORY_TARGET'],
        profile_name: call_directory_profile
      )
    end

    cru_fetch_certs(type: type)

    if ENV['CRU_SKIP_COCOAPODS'].nil?
      cocoapods(
        podfile: './Podfile',
        try_repo_update_on_error: true
      )
    end

    ios_derived_data_path = File.expand_path('../.local_derived_data')

    gym(
      scheme: ENV['CRU_SCHEME'],
      clean: File.exist?(ios_derived_data_path),
      workspace: "./#{ENV['CRU_XCODEWORKSPACE']}",
      derived_data_path: ios_derived_data_path,
      configuration: configuration,
      export_method: export_method,
      export_options: {
        provisioningProfiles: {
          ENV['CRU_APP_IDENTIFIER'] => profile_name
        }
      }
    )
  end
end
