name: CI/CD

env:
  XCPRETTY_TEST_FORMAT: true

on:
  push:
    branches: [develop, master]
  pull_request:
    branches: [develop, master]

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 12
  #     - uses: bahmutov/npm-install@v1
  #     - name: 🧪 Test
  #       run: npm run test --ci

  # eslint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 12
  #     - uses: bahmutov/npm-install@v1
  #     - name: 💨 ESLint
  #       run: npm run lint

  # typescript:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 12
  #     - uses: bahmutov/npm-install@v1
  #     - name: ✅ TypeScript lint
  #       run: npm run lint:ts

  prettier:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1
      - name: 💅 Prettier Check
        run: npm run prettier:check

  onesky-upload:
    runs-on: ubuntu-latest
    needs: [prettier] # [test, eslint, typescript, prettier]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1
      - name: ⛅🔼 OneSky Upload
        env:
          ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
          ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
        run: npm run onesky:upload

  # ios-codepush:
  #   runs-on: ubuntu-latest
  #   needs: [test, eslint, typescript, prettier]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 12
  #     - uses: bahmutov/npm-install@v1
  #     - name: ⛅ OneSky Download
  #       env:
  #         ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
  #         ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
  #       run: npm run onesky:download
  #     - name: 🏗️🚀🍏 Build and Codepush iOS
  #       env:
  #         APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
  #       # Codepush can't figure out how to parse MARKETING_VERSION https://github.com/microsoft/react-native-code-push/issues/1665 https://stackoverflow.com/a/58769925/665224
  #       run: npm run codepush-ios-staging --token "$APPCENTER_TOKEN" --sourcemap-output sourcemap.ios.js --extra-bundler-option="--sourcemap-sources-root" --extra-bundler-option="./" --description "#${{ github.run_id }} ${{ github.sha }} | ${{ github.event.head_commit.message }}" -t `sed -n '/MARKETING_VERSION/{s/MARKETING_VERSION = //;s/;//;s/^[[:space:]]*//;p;q;}' ./ios/MissionHub.xcodeproj/project.pbxproj`
  #     - name: 🔼🍏🗺️ Upload iOS sourcemaps to Rollbar
  #       env:
  #         ROLLBAR_POST_SERVER_ITEM_TOKEN: ${{ secrets.ROLLBAR_POST_SERVER_ITEM_TOKEN }}
  #       run: |
  #         curl https://api.rollbar.com/api/1/sourcemap \
  #           -F access_token=$ROLLBAR_POST_SERVER_ITEM_TOKEN \
  #           -F version=${{ github.sha }}.ios \
  #           -F minified_url=http://reactnativehost/main.jsbundle \
  #           -F source_map=@sourcemap.ios.js

  # android-codepush:
  #   runs-on: ubuntu-latest
  #   needs: [test, eslint, typescript, prettier]
  #   if: github.event_name == 'push' && github.ref == 'refs/heads/master'
  #   steps:
  #     - uses: actions/checkout@v2
  #       with:
  #         ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
  #     - uses: actions/setup-node@v2
  #       with:
  #         node-version: 12
  #     - uses: bahmutov/npm-install@v1
  #     - name: ⛅ OneSky Download
  #       env:
  #         ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
  #         ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
  #       run: npm run onesky:download
  #     - name: 🏗️🚀🤖 Build and Codepush Android
  #       env:
  #         APPCENTER_TOKEN: ${{ secrets.APPCENTER_TOKEN }}
  #       run: npm run codepush-android-staging --token "$APPCENTER_TOKEN" --sourcemap-output sourcemap.android.js --extra-bundler-option="--sourcemap-sources-root" --extra-bundler-option="./" --description "#${{ github.run_id }} ${{ github.sha }} | ${{ github.event.head_commit.message }}"
  #     - name: 🔼🤖🗺️ Upload Android sourcemaps to Rollbar
  #       env:
  #         ROLLBAR_POST_SERVER_ITEM_TOKEN: ${{ secrets.ROLLBAR_POST_SERVER_ITEM_TOKEN }}
  #       run: |
  #         curl https://api.rollbar.com/api/1/sourcemap \
  #           -F access_token=$ROLLBAR_POST_SERVER_ITEM_TOKEN \
  #           -F version=${{ github.sha }}.android \
  #           -F minified_url=http://reactnativehost/main.jsbundle \
  #           -F source_map=@sourcemap.android.js

  ios-deploy:
    runs-on: macos-latest
    needs: [prettier] # [test, eslint, typescript, prettier]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1
      - name: ⛅ OneSky Download
        env:
          ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
          ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
        run: npm run onesky:download
      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          working-directory: './ios'
          bundler-cache: true
      - name: 🗝 Configure GitHub login
        run: echo -e "machine github.com\n login $CI_USER_TOKEN" >> ~/.netrc
        env:
          CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      - name: Cache Pods
        uses: actions/cache@v2
        with:
          path: ios/Pods
          key: ${{ runner.os }}-pods-v1-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pods-v1-
      - name: Cache Derived Data
        uses: actions/cache@v2
        with:
          path: ios/.local_derived_data
          key: ${{ runner.os }}-local-derived-data-v2-${{ hashFiles('**/Podfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-local-derived-data-v2-
      - name: Touch all cache files
        run: find ios/.local_derived_data -exec touch -t 2004210000 {} \; || true
      # https://github.com/react-native-community/releases/issues/214#issuecomment-779920261
      - name: FBReactNativeSpec patch
        run: |
          mkdir node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec
          touch node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec.h
          touch node_modules/react-native/React/FBReactNativeSpec/FBReactNativeSpec/FBReactNativeSpec-generated.mm
      - name: 🏗️🚀🍏 Build and push to Testflight
        uses: maierj/fastlane-action@v2.0.0
        with:
          lane: ios beta
          subdirectory: ios
        env:
          TRAVIS_BRANCH: ${{ github.ref }}
          TRAVIS_TAG: ${{ github.ref }}
          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          TRAVIS_BUILD_NUMBER: ${{ github.run_id }}
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}
          FASTLANE_PASSWORD: ${{ secrets.FASTLANE_PASSWORD }}
      - name: Setup tmate session
        if: ${{ failure() }}
        uses: mxschmitt/action-tmate@v3
        with:
          limit-access-to-actor: true

  android-deploy:
    runs-on: ubuntu-latest
    needs: [prettier] # [test, eslint, typescript, prettier]
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
        with:
          ssh-key: ${{ secrets.VOKE_CI_SSH_KEY }}
          fetch-depth: 0
      - uses: actions/setup-node@v2
        with:
          node-version: 12
      - uses: bahmutov/npm-install@v1
      - name: ⛅ OneSky Download
        env:
          ONESKY_API_KEY: ${{ secrets.ONESKY_API_KEY }}
          ONESKY_SECRET_KEY: ${{ secrets.ONESKY_SECRET_KEY }}
        run: npm run onesky:download
      - name: ☕ Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: 1.8
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2
      - name: 💎 Setup Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 2.7.2
          working-directory: './android'
          bundler-cache: true
      - name: 🔓 Decrypt GooglePlayAPI.json
        run: openssl aes-256-cbc -K $GOOGLE_PLAY_API_FILE_KEY -iv $GOOGLE_PLAY_API_FILE_IV -in ./android/fastlane/GooglePlayAPI.enc -out ./android/fastlane/GooglePlayAPI.json -d
        env:
          GOOGLE_PLAY_API_FILE_KEY: ${{ secrets.GOOGLE_PLAY_API_FILE_KEY }}
          GOOGLE_PLAY_API_FILE_IV: ${{ secrets.GOOGLE_PLAY_API_FILE_IV }}
      - name: 🗝 Configure GitHub login
        run: echo -e "machine github.com\n login $CI_USER_TOKEN" >> ~/.netrc
        env:
          CI_USER_TOKEN: ${{ secrets.CI_USER_TOKEN }}
      - name: Accept Android SDK licenses
        run: |
          echo "8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
          echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
          echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> "$ANDROID_HOME/licenses/android-sdk-license"
      - name: convert node_modules dependencies to AndroidX
        run: npx jetify
      - name: 🏗️🚀🤖 Build and push to Android Beta
        uses: maierj/fastlane-action@v2.0.0
        with:
          lane: android beta
          subdirectory: android
        env:
          TRAVIS_BRANCH: ${{ github.ref }}
          TRAVIS_TAG: ${{ github.ref }}
          TRAVIS_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          TRAVIS_BUILD_NUMBER: ${{ github.run_id }}
          GOOGLE_PLAY_UPLOAD_KEY_PASSWORD: ${{ secrets.GOOGLE_PLAY_UPLOAD_KEY_PASSWORD }}
