// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`context mode renders correctly 1`] = `
Array [
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Array [
        Object {
          "flex": 1,
        },
        undefined,
      ]
    }
  >
    <View
      style={
        Array [
          Object {
            "paddingBottom": 16,
            "paddingHorizontal": 22,
            "zIndex": 1,
          },
          Object {
            "zIndex": 1,
          },
        ]
      }
    >
      <View
        style={
          Object {
            "paddingHorizontal": 22,
          }
        }
      >
        <View
          accessible={true}
          collapsable={false}
          focusable={true}
          onBlur={[Function]}
          onClick={[Function]}
          onFocus={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "backgroundColor": "rgba(0,0,0,.6)",
              "bottom": -1000,
              "left": -1000,
              "position": "absolute",
              "right": -1000,
              "top": -1000,
              "zIndex": 1,
            }
          }
        />
        <View
          forwardedRef={[Function]}
          style={
            Object {
              "transform": Array [
                Object {
                  "scale": 1,
                },
              ],
              "width": "100%",
              "zIndex": 2,
            }
          }
        >
          <View>
            <View
              accessible={true}
              collapsable={false}
              focusable={true}
              onBlur={[Function]}
              onClick={[Function]}
              onFocus={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "backgroundColor": "#186078",
                  "borderRadius": 8,
                  "overflow": "hidden",
                  "width": "100%",
                }
              }
              testID="messagePressArea"
            >
              <View>
                <Text
                  style={
                    Object {
                      "color": "#fff",
                      "fontFamily": "TitilliumWeb-SemiBold",
                      "marginBottom": -16,
                      "opacity": 0.75,
                      "paddingHorizontal": 22,
                      "paddingTop": 16,
                    }
                  }
                >
                  John 
                  Doe 
                </Text>
                <Text
                  style={
                    Array [
                      Object {
                        "fontSize": 17,
                        "paddingHorizontal": 22,
                        "paddingVertical": 22,
                      },
                      Object {
                        "color": "#fff",
                        "opacity": 1,
                      },
                    ]
                  }
                >
                  Test message content
                </Text>
              </View>
              <View
                style={
                  Object {
                    "flex": 1,
                  }
                }
              />
            </View>
            <Image
              source={
                Object {
                  "uri": "https://assets.vokeapp.com/images/user/small/avatar.jpg",
                }
              }
              style={
                Object {
                  "backgroundColor": "#3295ad",
                  "borderRadius": 50,
                  "bottom": 0,
                  "height": 25,
                  "left": -30,
                  "position": "absolute",
                  "width": 25,
                }
              }
            />
          </View>
          <View
            style={
              Array [
                Object {
                  "flexDirection": "row",
                  "paddingTop": 4,
                },
                Object {
                  "justifyContent": "flex-start",
                },
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#1d1d26",
                  },
                  Object {
                    "fontFamily": "TitilliumWeb-Regular",
                  },
                  Object {
                    "color": "#fff",
                    "fontSize": 13,
                    "textAlign": "right",
                  },
                ]
              }
            >
              Jan 25 @ 4:44 PM
            </Text>
            <View
              style={
                Array [
                  Object {
                    "alignItems": "flex-start",
                    "alignSelf": "flex-start",
                    "flex": 1,
                    "flexDirection": "row",
                    "flexWrap": "wrap",
                  },
                  Object {
                    "justifyContent": "flex-end",
                  },
                ]
              }
            >
              <View
                forwardedRef={[Function]}
                style={Object {}}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 12,
                      "marginBottom": 4,
                      "marginLeft": 8,
                      "paddingHorizontal": 4,
                      "paddingVertical": 4,
                    }
                  }
                  testID="reactionPill-0"
                >
                  <Text
                    style={
                      Object {
                        "color": "#186078",
                        "fontSize": 11,
                        "paddingRight": 4,
                      }
                    }
                  >
                    🤗
                     
                    3
                  </Text>
                </View>
              </View>
              <View
                forwardedRef={[Function]}
                style={Object {}}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 12,
                      "marginBottom": 4,
                      "marginLeft": 8,
                      "paddingHorizontal": 4,
                      "paddingVertical": 4,
                    }
                  }
                  testID="reactionPill-1"
                >
                  <Text
                    style={
                      Object {
                        "color": "#186078",
                        "fontSize": 11,
                        "paddingRight": 4,
                      }
                    }
                  >
                    😄
                     
                    1
                  </Text>
                </View>
              </View>
              <View
                forwardedRef={[Function]}
                style={Object {}}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 12,
                      "marginBottom": 4,
                      "marginLeft": 8,
                      "paddingHorizontal": 4,
                      "paddingVertical": 4,
                    }
                  }
                  testID="reactionPill-2"
                >
                  <Text
                    style={
                      Object {
                        "color": "#186078",
                        "fontSize": 11,
                        "paddingRight": 4,
                      }
                    }
                  >
                    ♥️
                     
                    3
                  </Text>
                </View>
              </View>
              <View
                forwardedRef={[Function]}
                style={Object {}}
              >
                <View
                  accessible={true}
                  collapsable={false}
                  focusable={true}
                  onBlur={[Function]}
                  onClick={[Function]}
                  onFocus={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "backgroundColor": "#fff",
                      "borderRadius": 12,
                      "marginBottom": 4,
                      "marginLeft": 8,
                      "paddingHorizontal": 4,
                      "paddingVertical": 4,
                    }
                  }
                  testID="reactionPill-3"
                >
                  <Text
                    style={
                      Object {
                        "color": "#186078",
                        "fontSize": 11,
                        "paddingRight": 4,
                      }
                    }
                  >
                    😂
                     
                    1
                  </Text>
                </View>
              </View>
            </View>
          </View>
          <View
            forwardedRef={[Function]}
            style={
              Object {
                "opacity": 0,
                "position": "absolute",
                "top": -76,
                "transform": Array [
                  Object {
                    "translateY": 100,
                  },
                ],
                "width": "100%",
              }
            }
            testID="reactionsPopup"
          >
            <View
              style={
                Object {
                  "backgroundColor": "#fefefe",
                  "borderRadius": 12,
                  "flexDirection": "row",
                  "height": 60,
                  "justifyContent": "space-evenly",
                  "paddingHorizontal": 8,
                }
              }
            >
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "stretch",
                    "alignSelf": "stretch",
                    "flex": 1,
                    "height": 60,
                    "justifyContent": "center",
                    "textAlign": "center",
                  }
                }
                testID="reaction-0"
              >
                <Text
                  style={
                    Object {
                      "fontSize": 38,
                      "lineHeight": 60,
                      "textAlign": "center",
                    }
                  }
                >
                  ♥️
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "stretch",
                    "alignSelf": "stretch",
                    "flex": 1,
                    "height": 60,
                    "justifyContent": "center",
                    "textAlign": "center",
                  }
                }
                testID="reaction-1"
              >
                <Text
                  style={
                    Object {
                      "fontSize": 38,
                      "lineHeight": 60,
                      "textAlign": "center",
                    }
                  }
                >
                  😄
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "stretch",
                    "alignSelf": "stretch",
                    "flex": 1,
                    "height": 60,
                    "justifyContent": "center",
                    "textAlign": "center",
                  }
                }
                testID="reaction-2"
              >
                <Text
                  style={
                    Object {
                      "fontSize": 38,
                      "lineHeight": 60,
                      "textAlign": "center",
                    }
                  }
                >
                  😂
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "stretch",
                    "alignSelf": "stretch",
                    "flex": 1,
                    "height": 60,
                    "justifyContent": "center",
                    "textAlign": "center",
                  }
                }
                testID="reaction-3"
              >
                <Text
                  style={
                    Object {
                      "fontSize": 38,
                      "lineHeight": 60,
                      "textAlign": "center",
                    }
                  }
                >
                  🤗
                </Text>
              </View>
              <View
                accessible={true}
                collapsable={false}
                focusable={true}
                onBlur={[Function]}
                onClick={[Function]}
                onFocus={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "alignItems": "stretch",
                    "alignSelf": "stretch",
                    "flex": 1,
                    "height": 60,
                    "justifyContent": "center",
                    "textAlign": "center",
                  }
                }
                testID="reaction-4"
              >
                <Text
                  style={
                    Object {
                      "fontSize": 38,
                      "lineHeight": 60,
                      "textAlign": "center",
                    }
                  }
                >
                  😓
                </Text>
              </View>
            </View>
            <View
              style={
                Array [
                  Object {
                    "height": 40,
                    "transform": Array [
                      Object {
                        "rotate": "0deg",
                      },
                    ],
                    "width": 40,
                  },
                  Object {
                    "bottom": -10,
                    "left": 14,
                    "position": "absolute",
                    "zIndex": -1,
                  },
                ]
              }
            >
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderColor": "transparent",
                      "borderLeftColor": "#eee",
                      "borderLeftWidth": 20,
                      "borderTopWidth": 20,
                      "borderWidth": 0,
                    },
                    Object {
                      "bottom": 0,
                      "left": 0,
                      "position": "absolute",
                      "transform": Array [
                        Object {
                          "scale": -1,
                        },
                      ],
                    },
                  ]
                }
              />
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "transparent",
                      "borderColor": "transparent",
                      "borderLeftColor": "#eee",
                      "borderLeftWidth": 20,
                      "borderTopWidth": 20,
                      "borderWidth": 0,
                    },
                    Object {
                      "bottom": 0,
                      "position": "absolute",
                      "right": 0,
                      "transform": Array [
                        Object {
                          "scaleY": -1,
                        },
                      ],
                    },
                  ]
                }
              />
            </View>
          </View>
        </View>
      </View>
    </View>
  </View>,
  <View
    collapsable={false}
    pointerEvents="box-none"
    style={
      Object {
        "bottom": 0,
        "left": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
      }
    }
  >
    <View
      forwardedRef={[Function]}
      style={
        Object {
          "bottom": 0,
          "height": 90,
          "left": 0,
          "position": "absolute",
          "right": 0,
          "transform": Array [
            Object {
              "translateY": 100,
            },
          ],
          "zIndex": 1,
        }
      }
    >
      <View
        style={
          Object {
            "backgroundColor": "#44c8e8",
            "flexDirection": "row",
            "height": "100%",
            "width": "100%",
          }
        }
      >
        <RNCSafeAreaView
          edges={
            Array [
              "bottom",
              "right",
              "left",
            ]
          }
          style={
            Object {
              "flexDirection": "row",
              "width": "100%",
            }
          }
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
            testID="report"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#1d1d26",
                  },
                  Object {
                    "fontFamily": "TitilliumWeb-Regular",
                  },
                  Array [
                    Object {
                      "opacity": 1,
                    },
                    Object {
                      "color": "#fff",
                      "fontSize": 17,
                    },
                  ],
                ]
              }
            >
              report
            </Text>
          </View>
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "alignItems": "center",
                "flex": 1,
                "justifyContent": "center",
              }
            }
            testID="copy"
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#1d1d26",
                  },
                  Object {
                    "fontFamily": "TitilliumWeb-Regular",
                  },
                  Object {
                    "color": "#fff",
                    "fontSize": 17,
                  },
                ]
              }
            >
              copy
            </Text>
          </View>
        </RNCSafeAreaView>
      </View>
    </View>
  </View>,
]
`;

exports[`renders correctly 1`] = `
<View
  style={
    Array [
      Object {
        "paddingBottom": 16,
        "paddingHorizontal": 22,
        "zIndex": 1,
      },
      Object {
        "zIndex": -1,
      },
    ]
  }
>
  <View
    style={
      Object {
        "paddingHorizontal": 22,
      }
    }
  >
    <View>
      <View
        accessible={true}
        collapsable={false}
        focusable={true}
        onBlur={[Function]}
        onClick={[Function]}
        onFocus={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "backgroundColor": "#186078",
            "borderRadius": 8,
            "overflow": "hidden",
            "width": "100%",
          }
        }
        testID="messagePressArea"
      >
        <View>
          <Text
            style={
              Object {
                "color": "#fff",
                "fontFamily": "TitilliumWeb-SemiBold",
                "marginBottom": -16,
                "opacity": 0.75,
                "paddingHorizontal": 22,
                "paddingTop": 16,
              }
            }
          >
            John 
            Doe 
          </Text>
          <Text
            style={
              Array [
                Object {
                  "fontSize": 17,
                  "paddingHorizontal": 22,
                  "paddingVertical": 22,
                },
                Object {
                  "color": "#fff",
                  "opacity": 1,
                },
              ]
            }
          >
            Test message content
          </Text>
        </View>
        <View
          style={
            Object {
              "flex": 1,
            }
          }
        />
      </View>
      <Image
        source={
          Object {
            "uri": "https://assets.vokeapp.com/images/user/small/avatar.jpg",
          }
        }
        style={
          Object {
            "backgroundColor": "#3295ad",
            "borderRadius": 50,
            "bottom": 0,
            "height": 25,
            "left": -30,
            "position": "absolute",
            "width": 25,
          }
        }
      />
    </View>
    <View
      style={
        Array [
          Object {
            "flexDirection": "row",
            "paddingTop": 4,
          },
          Object {
            "justifyContent": "flex-start",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "#1d1d26",
            },
            Object {
              "fontFamily": "TitilliumWeb-Regular",
            },
            Object {
              "color": "#fff",
              "fontSize": 13,
              "textAlign": "right",
            },
          ]
        }
      >
        Jan 25 @ 4:44 PM
      </Text>
      <View
        style={
          Array [
            Object {
              "alignItems": "flex-start",
              "alignSelf": "flex-start",
              "flex": 1,
              "flexDirection": "row",
              "flexWrap": "wrap",
            },
            Object {
              "justifyContent": "flex-end",
            },
          ]
        }
      >
        <View
          forwardedRef={[Function]}
          style={Object {}}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 12,
                "marginBottom": 4,
                "marginLeft": 8,
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
            testID="reactionPill-0"
          >
            <Text
              style={
                Object {
                  "color": "#186078",
                  "fontSize": 11,
                  "paddingRight": 4,
                }
              }
            >
              🤗
               
              3
            </Text>
          </View>
        </View>
        <View
          forwardedRef={[Function]}
          style={Object {}}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 12,
                "marginBottom": 4,
                "marginLeft": 8,
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
            testID="reactionPill-1"
          >
            <Text
              style={
                Object {
                  "color": "#186078",
                  "fontSize": 11,
                  "paddingRight": 4,
                }
              }
            >
              😄
               
              1
            </Text>
          </View>
        </View>
        <View
          forwardedRef={[Function]}
          style={Object {}}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 12,
                "marginBottom": 4,
                "marginLeft": 8,
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
            testID="reactionPill-2"
          >
            <Text
              style={
                Object {
                  "color": "#186078",
                  "fontSize": 11,
                  "paddingRight": 4,
                }
              }
            >
              ♥️
               
              3
            </Text>
          </View>
        </View>
        <View
          forwardedRef={[Function]}
          style={Object {}}
        >
          <View
            accessible={true}
            collapsable={false}
            focusable={true}
            onBlur={[Function]}
            onClick={[Function]}
            onFocus={[Function]}
            onResponderGrant={[Function]}
            onResponderMove={[Function]}
            onResponderRelease={[Function]}
            onResponderTerminate={[Function]}
            onResponderTerminationRequest={[Function]}
            onStartShouldSetResponder={[Function]}
            style={
              Object {
                "backgroundColor": "#fff",
                "borderRadius": 12,
                "marginBottom": 4,
                "marginLeft": 8,
                "paddingHorizontal": 4,
                "paddingVertical": 4,
              }
            }
            testID="reactionPill-3"
          >
            <Text
              style={
                Object {
                  "color": "#186078",
                  "fontSize": 11,
                  "paddingRight": 4,
                }
              }
            >
              😂
               
              1
            </Text>
          </View>
        </View>
      </View>
    </View>
  </View>
</View>
`;
